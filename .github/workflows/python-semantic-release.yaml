name: Update changelog and version

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: update-version

    permissions:
      contents: write

    steps:
      # Note: due to branch protection rules (e.g., 'Require a pull request before merging'), the
      # standard `secrets.GITHUB_TOKEN` lacks permission to create commits on the main branch. To
      # enable `python-semantic-release` to act on main, we utilize a token generated by an app
      # with read and write permissions for contents, which is on the bypass list of the respective
      # ruleset. See also: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/making-authenticated-api-requests-with-a-github-app-in-a-github-actions-workflow#authenticating-with-a-github-app
      - name: Setup | Generate a token that bypasses branch protection rules
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID_BOT_WITH_CONTENT_PERMISSION }}
          private-key: ${{ secrets.APP_PRIVATE_KEY_BOT_WITH_CONTENT_PERMISSION }}

      # Note: we need to check out the repository at the workflow sha in case during the workflow
      # the branch was updated. To keep PSR working with the configured release branches,
      # we force a checkout of the desired release branch but at the workflow sha HEAD.
      - name: Setup | Checkout Repository at workflow sha
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0
          ref: ${{ github.sha }}

      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}

      - name: Action | Semantic Version Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
